DROP TABLE CUSTOMER;
DROP TABLE CUS_LEVEL;
DROP SEQUENCE CUS_SQ;

CREATE TABLE CUS_LEVEL(
    LEVEL_CODE NUMBER(5) PRIMARY KEY,
    LEVEL_NAME VARCHAR2(50),
    LEVEL_LOCOST NUMBER(10),
    LEVEL_HICOST NUMBER(10));

CREATE SEQUENCE CUS_SQ
    MAXVALUE 9999
    NOCACHE;

CREATE TABLE CUSTOMER(
    cID NUMBER(4) PRIMARY KEY,
    cTEL VARCHAR2(50),
    cNAME VARCHAR2(50) NOT NULL,
    cCOST NUMBER(10) DEFAULT 0,
    cPOINT NUMBER(10) DEFAULT 1000,
    cDELETE NUMBER(1) DEFAULT 0,
    LEVEL_CODE NUMBER(5) DEFAULT 1,
    FOREIGN KEY(LEVEL_CODE) REFERENCES CUS_LEVEL(LEVEL_CODE));
    
SELECT*FROM CUS_LEVEL;
SELECT*FROM CUSTOMER;

INSERT INTO CUS_LEVEL VALUES (1, 'NORMAL', 0, 10000);
INSERT INTO CUS_LEVEL VALUES (2, 'SILVER', 10001, 500000);
INSERT INTO CUS_LEVEL VALUES (3, 'GOLD', 500001, 9999999999);

INSERT INTO CUSTOMER (cID, cTEL, cNAME) 
    VALUES (CUS_SQ.NEXTVAL, '010-1111-1111', '박지영');
INSERT INTO CUSTOMER (cID, cTEL, cNAME) 
    VALUES (CUS_SQ.NEXTVAL, '010-222-2222', '박소영');
INSERT INTO CUSTOMER (cID, cTEL, cNAME, cCOST, cPOINT, LEVEL_CODE) 
    VALUES (CUS_SQ.NEXTVAL, '010-3333-3333', '랄라랄', 300000, 30000, '2');
INSERT INTO CUSTOMER (cID, cTEL, cNAME, cCOST, cPOINT, LEVEL_CODE) 
    VALUES (CUS_SQ.NEXTVAL, '010-3333-3333', '루루루룰', 300000, 30000, '2');
INSERT INTO CUSTOMER (cID, cTEL, cNAME, cCOST, cPOINT, LEVEL_CODE) 
    VALUES (CUS_SQ.NEXTVAL, '010-9966-9956', '전대한', 1000000, 50000, '3');

COMMIT;

-- 1. 레벨이름 불러오기
SELECT LEVEL_NAME FROM CUS_LEVEL;

-- 2. 폰 4자리(FULL) 검색(CTEL, CNAME, CPOINT, CCOST, LEVEL_NAME, 레벨업을 위한 필요금액)
--SELECT cTEL, cNAME, cPOINT, cCOST, LEVE_NAME,
SELECT CID, CTEL, CNAME, CPOINT, CCOST, LEVEL_NAME, 
	NVL((SELECT LEVEL_HICOST-CCOST+1 FROM CUSTOMER WHERE C.LEVEL_CODE<>3 AND CID=C.CID),0) SMM
    FROM CUS_LEVEL L, CUSTOMER C 
    WHERE L.LEVEL_CODE=C.LEVEL_CODE AND CTEL LIKE '%'||'010-1111-1111';

-- 3. 고객이름 검색(CTEL, CNAME, CPOINT, CCOST, LEVEL_NAME, 레벨업을 위한 필요금액)
SELECT CID, CTEL, CNAME, CPOINT, CCOST, LEVEL_NAME, 
	NVL((SELECT LEVEL_HICOST-CCOST+1 FROM CUSTOMER WHERE C.LEVEL_CODE<>3 AND CID=C.CID),0) SMM
    FROM CUS_LEVEL L, CUSTOMER C 
    WHERE L.LEVEL_CODE=C.LEVEL_CODE AND CNAME='전대한';

-- 4. 포인트로만 구매(=포인트 차감.) UPDATE 문
UPDATE CUSTOMER SET CPOINT=CPOINT-1000  WHERE CID=2;

-- 5. 물품 구매 (UPDATE문 2개 - 1)포인트와 누적금액 조정, 2)고객레벨조정)  
UPDATE CUSTOMER SET CCOST=CCOST+1000000, CPOINT=CPOINT+1000000*0.5,
    LEVEL_CODE=(SELECT L.LEVEL_CODE FROM CUS_LEVEL L, CUSTOMER C WHERE C.CCOST+1000000 BETWEEN LEVEL_LOCOST AND LEVEL_HICOST AND CID=2)
    WHERE CID=2;

-- 6. 등급별 출력(등급 선택 후 버튼 누르면 (CTEL, CNAME, CPOINT, CCOST, LEVEL_NAME, 레벨업을 위한 필요금액)
SELECT CID, CTEL, CNAME, CPOINT, CCOST, LEVEL_NAME, 
	NVL((SELECT LEVEL_HICOST-CCOST+1 FROM CUSTOMER WHERE C.LEVEL_CODE<>3 AND CID=C.CID),0) SMM
    FROM CUS_LEVEL L, CUSTOMER C 
    WHERE L.LEVEL_CODE=C.LEVEL_CODE AND C.LEVEL_CODE = (SELECT LEVEL_CODE FROM CUS_LEVEL WHERE LEVEL_NAME='NORMAL');

-- 7. 전체출력 (CTEL, CNAME, CPOINT, CCOST, LEVEL_NAME, 레벨업을 위한 필요금액
SELECT CID, CTEL, CNAME, CPOINT, CCOST, LEVEL_NAME, 
	NVL((SELECT LEVEL_HICOST-CCOST+1 FROM CUSTOMER WHERE C.LEVEL_CODE<>3 AND CID=C.CID),0) SMM
    FROM CUS_LEVEL L, CUSTOMER C 
    WHERE L.LEVEL_CODE=C.LEVEL_CODE
    ORDER BY CCOST DESC;
    
-- 8. 회원가입 INSERT (고객전화, 고객이름은 입력해야한다.)
INSERT INTO CUSTOMER (CID, CTEL, CNAME) VALUES (CUS_SQ.NEXTVAL, '010-7777-7777', '김갹갹');

-- 9. 전화번호 수정 (UPDATE) (WHERE CID)
UPDATE CUSTOMER SET CTEL='010-5555-5555' WHERE CID=1;

-- 10. 회원탈퇴 (UPDATE)
UPDATE CUSTOMER SET CDELETE='1' WHERE CID=1;
COMMIT;




