-- 2019.12.20_30장 JOIN 
-- (1) CROSS JOIN 단순 조인
SELECT ENAME.*, SALGRADE.* FROM EMP, SALGRADE;
-- (2) 동등 JOIN(EQUI JOIN) : 2개의 테이블에 동일한 필드가 있는 경우(DEPT, EMP 테이블에 DEPTNO)
SELECT * FROM EMP, DEPT
    WHERE ENAME='SMITH' AND EMP.DEPTNO=DEPT.DEPTNO;
SELECT * FROM EMP, DEPT
    WHERE EMP.DEPTNO=DEPT.DEPTNO;   
SELECT EMPNO, ENAME, E.DEPTNO, DNAME, LOC FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO
    ORDER BY E.DEPTNO;
SELECT * FROM DEPT;
-- 사번, 이름, 급여, 부서번호, 부서명
SELECT EMPNO, ENAME, SAL, E.DEPTNO, DNAME FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO 
    ORDER BY SAL DESC;
-- 이름, 업무, 급여, 부서명, 근무지. 급여가 2000 이상
SELECT ENAME, JOB, SAL, DNAME, LOC FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND SAL>=2000 
    ORDER BY SAL DESC;
-- 이름, 업무, 부서명, 근무지. 근무지가 시카고
SELECT ENAME, JOB, DNAME, LOC FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND LOC='CHICAGO';
-- 이름, 업무, 근무지.DEPTNO 10 OR 20. 급여순
SELECT ENAME, JOB, LOC FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND E.DEPTNO IN(10,20)
    ORDER BY SAL DESC; 
-- 이름, 급여, COMM, 연봉, 부서명, 근무지. 연봉=(SAL+COMM)*12 단, COMM이 NULL 이면 0
SELECT ENAME, SAL, NVL(COMM,0) COMM, (SAL+NVL(COMM,0))*12 "연봉", DNAME, LOC FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO;
-- JOB이 세일즈맨이거나 매니저를 대상으로 연봉이 큰 순서대로 출력
SELECT ENAME, SAL, NVL(COMM,0) COM, (SAL+NVL(COMM,0))*12 "연봉", DNAME, LOC 
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND JOB IN('SALESMAN','MANAGER')
    ORDER BY SAL DESC;
-- 이름, 급여, 입사일, 부서코드, 부서명. COMM이 NULL 이고, 급여가 1200이상인 경우.부서명순 정렬. 같으면 급여큰순
SELECT ENAME, SAL, E.DEPTNO, DNAME
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND COMM IS NULL AND SAL>=1200
    ORDER BY DNAME, SAL DESC;
-- 뉴욕에서 근무하는 사원의 이름과 급여를 출력하시오
SELECT * FROM DEPT;
SELECT * FROM EMP;
SELECT ENAME, SAL
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND LOC='NEW YORK';
-- ACCOUNTING 부서 소속 사원의 이름과 입사일을 출력하시오
SELECT ENAME, HIREDATE
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND DNAME='ACCOUNTING';
-- 직급이 MANAGER인 사원의 이름, 부서명을 출력하시오
SELECT ENAME, DNAME
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND JOB='MANAGER';
-- Comm이 null이 아닌 사원의 이름, 급여, 부서코드, 근무지를 출력하시오.
SELECT ENAME, SAL, E.DEPTNO, LOC
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND COMM IS NOT NULL;
    
-- NON-EQUI JOIN (동일한 필드가 없는 2개의 테이블을 JOIN)
SELECT * FROM EMP; -- 사원테이블
SELECT * FROM SALGRADE; -- 급여등급테이블
SELECT ENAME, SAL, SALGRADE.*
    FROM EMP, SALGRADE
    WHERE ENAME='SMITH' AND SAL BETWEEN LOSAL AND HISAL;
SELECT ENAME, SAL, GRADE || '등급' 등급
    FROM EMP, SALGRADE
    WHERE SAL BETWEEN LOSAL AND HISAL;
-- 0.	Comm이 null이 아닌 사원의 이름, 급여, 등급, 부서번호, 부서이름, 근무지를 출력하시오.
SELECT ENAME, SAL, GRADE, E.DEPTNO, DNAME, LOC
    FROM EMP E, DEPT D, SALGRADE S
    WHERE E.DEPTNO = D.DEPTNO AND SAL BETWEEN LOSAL AND HISAL AND COMM IS NOT NULL
    ORDER BY SAL DESC;
-- 1.	이름, 급여, 입사일, 급여등급
SELECT ENAME, SAL, HIREDATE, GRADE
    FROM EMP E, SALGRADE S
    WHERE SAL BETWEEN LOSAL AND HISAL
    ORDER BY GRADE DESC, SAL DESC;
-- 2.	이름, 급여, 입사일, 급여등급, 부서명, 근무지
SELECT ENAME, SAL, HIREDATE, GRADE, DNAME, LOC
    FROM EMP E, DEPT D, SALGRADE S
    WHERE E.DEPTNO=D.DEPTNO AND SAL BETWEEN LOSAL AND HISAL;
-- 3.	이름, 급여, 등급, 부서코드, 근무지. 단 comm 이 null아닌 경우
SELECT ENAME, SAL, GRADE, E.DEPTNO, LOC
    FROM EMP E, DEPT D, SALGRADE S
    WHERE E.DEPTNO=D.DEPTNO AND SAL BETWEEN LOSAL AND HISAL AND COMM IS NOT NULL;
-- 4.	이름, 급여, 급여등급, 연봉, 부서명, 부서별 출력, 부서가 같으면 연봉순. 연봉=(sal+comm)*12 comm이 null이면 0
SELECT ENAME, SAL, GRADE, (SAL+NVL(COMM,0))*12 "연봉", DNAME
    FROM EMP E, DEPT D, SALGRADE S
    WHERE E.DEPTNO=D.DEPTNO AND SAL BETWEEN LOSAL AND HISAL
        ORDER BY DNAME, (SAL+NVL(COMM,0))*12;
-- 5.	이름, 업무, 급여, 등급, 부서코드, 부서명 출력. 급여가 1000~3000사이. 정렬조건 : 부서별, 부서같으면 업무별, 업무같으면 급여 큰순
SELECT ENAME, JOB, SAL, GRADE, E.DEPTNO, DNAME
    FROM EMP E, DEPT D, SALGRADE S
    WHERE E.DEPTNO=D.DEPTNO AND SAL BETWEEN LOSAL AND HISAL
        AND SAL BETWEEN 1000 AND 3000
    ORDER BY DNAME, JOB, SAL DESC;
-- 6.	이름, 급여, 등급, 입사일, 근무지. 81년에 입사한 사람. 등급 큰순
SELECT ENAME, SAL, GRADE, TO_CHAR(HIREDATE, 'YYYY"년 "MM"월 "DD"일 "DY"요일" HH24"시 "MI"분 "SS"초"')HIREDATE, LOC
    FROM EMP E, DEPT D, SALGRADE
    WHERE E.DEPTNO=D.DEPTNO AND SAL BETWEEN LOSAL AND HISAL
        AND TO_CHAR(HIREDATE, 'YY/MM/DD') LIKE '81%'
        ORDER BY GRADE DESC;

-- (4) 셀프조인(SELF JOIN) : 한 테이블을 서로 JOIN 
SELECT EMPNO, ENAME, MGR FROM EMP; -- MGR : 내 직속상사의 사번
SELECT WORKER.EMPNO, WORKER.ENAME, WORKER.MGR, MANAGER.ENAME
    FROM EMP WORKER, EMP MANAGER
    WHERE WORKER.ENAME='SMITH' AND WORKER.MGR=MANAGER.EMPNO;
-- 사원, 상사이름
SELECT WORKER.ENAME "사원이름", MANAGER.ENAME "상사이름"
    FROM EMP WORKER, EMP MANAGER
    WHERE WORKER.MGR=MANAGER.EMPNO;
-- XX의 상사는 XX다.
SELECT W.ENAME ||'의 상사는 ' || M.ENAME
    FROM EMP W, EMP M
    WHERE W.MGR=M.EMPNO;
-- 매니저가 KING인 사원들의 이름과 직급을 출력하시오.
SELECT * FROM EMP;
SELECT W.ENAME, W.JOB
    FROM EMP W, EMP M
    WHERE W.MGR=M.EMPNO AND W.ENAME='KING';
-- SCOTT과 동일한 근무지에서 근무하는 사원의 이름을 출력하시오
-- 1단계
SELECT E2.ENAME
    FROM EMP E1, EMP E2
    WHERE E1.DEPTNO=E2.DEPTNO AND E1.ENAME='SCOTT' AND E2.ENAME^='SCOTT';
-- 2단계
SELECT E2.ENAME 
    FROM EMP E1, DEPT D1, EMP E2, DEPT D2
    WHERE E1.DEPTNO=D1.DEPTNO AND E2.DEPTNO=D2.DEPTNO AND D1.LOC=D2.LOC
    AND E1.ENAME='SCOTT' AND E2.ENAME^='SCOTT';   
SELECT E2.ENAME, LOC
    FROM EMP E1, EMP E2, DEPT D
    WHERE E1.DEPTNO=D.DEPTNO AND E2.DEPTNO=D.DEPTNO
    AND E1.ENAME='SCOTT' AND E2.ENAME^='SCOTT'; -- (주의) 이렇게 하면 DEPT 기준이고 LOC 기준이 아님
 -- TEST 용   
INSERT INTO DEPT VALUES (50, 'IT', 'DALLAS');
INSERT INTO EMP VALUES (9999,'홍길동','MANAGER',7902, '19/12/20', 1000, NULL, 50);
SELECT * FROM DEPT;
SELECT * FROM EMP;
ROLLBACK;

-- (5) OUTER JOIN : JOIN 조건을 만족하지 않는 행을 나타나게 하는 조인!
SELECT W.ENAME "부하", W.MGR, M.EMPNO, M.ENAME "직속상사"
    FROM EMP W, EMP M
    WHERE W.MGR=M.EMPNO(+); -- 적은 쪽에 (+)를 하면 됨.
-- X의 매니저는 X(無) 입니다.
SELECT W.ENAME || '의 매니저는 ' || NVL(M.ENAME,'無') || ' 입니다.'
    FROM EMP W, EMP M
    WHERE W.MGR=M.EMPNO(+);
-- 말단 사원 리스트
SELECT NVL(W.ENAME,'-') MGR, M.ENAME
    FROM EMP W, EMP M 
    WHERE W.MGR(+)=M.EMPNO AND W.ENAME IS NULL;
-- EQUI JOIN에서 손실된데이터
SELECT * FROM EMP; -- 14명(10,20,30)
SELECT * FROM DEPT; -- 4개의 부서(10,20,30,40)
SELECT * FROM EMP, DEPT
    WHERE EMP.DEPTNO(+)=DEPT.DEPTNO;
-- 이름, 업무(JOB), 부서명(DNAME), 급여(SAL) LIST 단, 직원이 없는 부서명도 '-' 나오게
SELECT NVL(ENAME,'-') ENAME, NVL(JOB,'-') JOB, DNAME, NVL(TO_CHAR(SAL,'9,999'),'-') SAL
    FROM EMP E, DEPT D
    WHERE E.DEPTNO(+)=D.DEPTNO
    ORDER BY DNAME, SAL DESC;





